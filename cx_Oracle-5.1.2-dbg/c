#!/bin/sh
[ -f ../env ] && . ../env
DSN=${1:-$(cat ../.dsn)}
PYTHONPATH=build/lib.linux-x86_64-2.7-11g:$PYTHONPATH python <<EOF
import cx_Oracle_dbg as cx_Oracle
import sys
cx = cx_Oracle.connect('$DSN')
cu = cx.cursor()
cur = cu.var(cx_Oracle.CURSOR)
cu.execute("""DECLARE
  v_cur SYS_REFCURSOR;
BEGIN
  OPEN v_cur FOR
    SELECT * FROM all_objects;
  :1 := v_cur;
END;""", [cur])
for row in cur.getvalue():
    print row
    break
EOF
echo '----------------------------------------------------------'
PYTHONPATH=build/lib.linux-x86_64-2.7-11g:$PYTHONPATH python <<EOF
import cx_Oracle_dbg as cx_Oracle
import sys
cx = cx_Oracle.connect('$DSN')
cu = cx.cursor()
params = [cu.var(cx_Oracle.CLOB)]
cu.execute("""DECLARE
  clobvar CLOB;
  len BINARY_INTEGER;
  x VARCHAR2(80);
BEGIN
  dbms_lob.createtemporary(clobvar, TRUE);
  dbms_lob.open(clobvar, dbms_lob.lob_readwrite);
  x := 'before line break' || CHR(10) || 'after line break';
  len := length(x);
  dbms_lob.writeappend(clobvar, len, x);
  :1 := clobvar;
  dbms_lob.close(clobvar);
END;""", params)
clob = params[0].getvalue()
print clob.size(), repr(clob.read())
EOF

echo '----------------------------------------------------------'
PYTHONPATH=build/lib.linux-x86_64-2.7-11g:$PYTHONPATH python <<EOF
import cx_Oracle_dbg as cx_Oracle
import sys
cx = cx_Oracle.connect('$DSN')
cu = cx.cursor()
params = {'inp': [1, 2], 'out': cu.arrayvar(cx_Oracle.STRING, ['']*1000)}
params['out##1'] = params['out']
#cu.execute("ALTER SESSION SET cursor_sharing='EXACT'")
cu.execute("""DECLARE
    TYPE in_tabTyp IS TABLE OF NUMBER INDEX BY PLS_INTEGER;
	in_tab in_tabTyp := :inp;
	TYPE out_tabTyp IS TABLE OF VARCHAR2(1000) INDEX BY PLS_INTEGER;
	out_tab out_tabTyp;
	v_idx PLS_INTEGER;
BEGIN
	v_idx := in_tab.FIRST;
	WHILE v_idx IS NOT NULL LOOP
	    SELECT SUBSTR(DUMP(in_tab(v_idx)), 1, 1000) INTO out_tab(v_idx) FROM DUAL;
		v_idx := in_tab.NEXT(v_idx);
	END LOOP;
	:out := out_tab;
    :out##1 := out_tab;
END;""", params)
out = params['out'].getvalue()
print repr(out)
EOF

echo '----------------------------------------------------------'
PYTHONPATH=build/lib.linux-x86_64-2.7-11g:$PYTHONPATH python <<EOF
import cx_Oracle_dbg as cx_Oracle
import sys
cx = cx_Oracle.connect('$DSN')
cu = cx.cursor()
params = {'inp': [1, 2], 'out': cu.var(cx_Oracle.STRING)}
cu.execute("""DECLARE
    TYPE in_tabTyp IS TABLE OF INTEGER INDEX BY BINARY_INTEGER;
	in_tab in_tabTyp := :inp;
	v_idx PLS_INTEGER;
    v_out PLS_INTEGER := 0;
BEGIN
	v_idx := in_tab.FIRST;
	WHILE v_idx IS NOT NULL LOOP
        v_out := v_out + in_tab(v_idx);
		v_idx := in_tab.NEXT(v_idx);
	END LOOP;
    :out := v_out;
END;""", params)
out = params['out'].getvalue()
print repr(out)
EOF

echo '----------------------------------------------------------'
PYTHONPATH=build/lib.linux-x86_64-2.7-11g:$PYTHONPATH python <<EOF
import cx_Oracle_dbg as cx_Oracle
import sys
cx = cx_Oracle.connect('$DSN')
cu = cx.cursor()
params = {'inp': ['1', '2'], 'out': cu.var(cx_Oracle.STRING)}
cu.execute("""DECLARE
    TYPE in_tabTyp IS TABLE OF VARCHAR2(6) INDEX BY BINARY_INTEGER;
	in_tab in_tabTyp := :inp;
	v_idx PLS_INTEGER;
    v_out VARCHAR2(1000);
BEGIN
	v_idx := in_tab.FIRST;
	WHILE v_idx IS NOT NULL LOOP
        v_out := v_out ||';'|| in_tab(v_idx);
		v_idx := in_tab.NEXT(v_idx);
	END LOOP;
    :out := v_out;
END;""", params)
out = params['out'].getvalue()
print repr(out)
EOF
